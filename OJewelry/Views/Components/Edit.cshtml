@model OJewelry.Models.Component

@{
    ViewBag.Title = "Edit";
}

<h2>Edit the <i>@Model.Name</i> Component</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CompanyId)

    <div class="form-group">
        @Html.LabelFor(model => model.ComponentTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ComponentTypeId", null, htmlAttributes: new { @class = "form-control ", @onclick = "resetControls()" })
            @Html.ValidationMessageFor(model => model.ComponentTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecVendorGroup" class="form-group">
        @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("VendorId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecPriceGroup" class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecPPHGroup" class="form-group">
        @Html.LabelFor(model => model.PricePerHour, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PricePerHour, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PricePerHour, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecPPPGroup" class="form-group">
        @Html.LabelFor(model => model.PricePerPiece, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PricePerPiece, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PricePerPiece, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecMetalMetalGroup" class="form-group">
        @Html.LabelFor(model => model.MetalCodeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MetalCodeId, (SelectList)ViewBag.MetalCodes, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MetalCodeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecMetalLaborGroup" class="form-group">
        @Html.LabelFor(model => model.MetalLabor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MetalLabor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetalLabor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecCtwtGroup" class="form-group">
        @Html.LabelFor(model => model.StonesCtWt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StonesCtWt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StonesCtWt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecStoneSizeGroup" class="form-group">
        @Html.LabelFor(model => model.StoneSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoneSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoneSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="ecStonePPCGroup" class="form-group">
        @Html.LabelFor(model => model.StonePPC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StonePPC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StonePPC, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <input type="submit" value="Delete" formaction="../Delete/@Model.Id" class="btn btn-default" />
        </div>
    </div>
    @if (ViewBag.ErrorMessage != null)
    {
        <p class="text-danger">@ViewBag.ErrorMessage</p>
    }
</div>
}

<div>
    @Html.ActionLink("Components", "Index", new { CompanyId = Model.CompanyId })
</div>

@section Scripts {
    <script src="~/Scripts/CreateEditComponents.js"></script>
}
