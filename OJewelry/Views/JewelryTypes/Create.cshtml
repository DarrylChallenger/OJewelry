@model OJewelry.Models.JewelryType

@{
    ViewBag.Title = $"{ViewBag.CompanyName} - Create Jewelry Type";
}

<h2>Create a Jewelry Type for <i>@ViewBag.CompanyName</i></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Jewelry Type</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bUseLaborTable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.bUseLaborTable, new { htmlAttributes = new { @class = "form-control" }, onclick = "bUseLaborTableClicked()" })
            </div>
            @if (ViewBag.CompanyHasLTIs)
            {
                <p id="noLTIWarning" class="text-warning hidden">Note: You must add an entry to the Labor Table in order to create a Style</p>
            }
        </div>
        @{
            string nocursor = (Model == null || (Model.bUseLaborTable == false)) ? "" : "nocursor";
        }
        <div class="JewelryCostsGroup">
            <div class="form-group">
                @Html.LabelFor(model => model.PackagingCost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PackagingCost, new { htmlAttributes = new { @class = "form-control " + nocursor } })
                    @Html.ValidationMessageFor(model => model.PackagingCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FinishingCost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FinishingCost, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.FinishingCost, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", "JewelryTypes", new { companyId = (int)ViewBag.CompanyId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
<p class="MainMenu">
    @Html.ActionLink("Companies", "Index", "Companies") |
    @Html.Partial("_CompanyNavPartial", (int)ViewBag.CompanyId)
</p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/JewelryType.js")
}
