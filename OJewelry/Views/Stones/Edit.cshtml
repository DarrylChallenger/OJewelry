@model OJewelry.Models.Stone

@{
    ViewBag.Title = "Edit";
}

<h2>Edit the <i>@Model.Name</i> Stone</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Stone for the <i>@ViewBag.Companyname</i> company</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CompanyId)

    <div class="row CreateEditStone">
        <div class="col-sm-4 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StoneSize, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.StoneSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StoneSize, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShapeId, "Shape", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.DropDownList("ShapeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShapeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CtWt, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.CtWt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CtWt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VendorId, "Vendor", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.DropDownList("VendorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SettingCost, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.SettingCost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SettingCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-8">
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-7 col-xs-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-xs-12 col-sm-2" })
                <div class="col-xs-12 col-sm-10">
                    @Html.TextAreaFor(model => model.Note, new { @class = "form-control", rows = "12", cols = "80" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ParentHandle, htmlAttributes: new { @class = "control-label col-xs-12 col-sm-2" })
                <div class="col-xs-12 col-sm-10">
                    @Html.EditorFor(model => model.ParentHandle, new { htmlAttributes = new { @class = "form-control CreateEditStoneRightBoxLabel" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-xs-12 col-sm-2" })
                <div class="col-xs-12 col-sm-8">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control CreateEditStoneRightBoxLabel" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-xs-12 col-sm-2" })
                <div class="col-xs-12 col-sm-10">
                    @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control CreateEditStoneRightBoxLabel" } })
                </div>
            </div>

        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="Save" class="btn btn-default" />
            @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-default" })
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Stones", "Index", new { companyId = Model.CompanyId })
</div>
<p>
    @Html.ActionLink("Companies", "Index", "Companies") |
    @Html.Partial("_CompanyNavPartial", Model.CompanyId)
</p>