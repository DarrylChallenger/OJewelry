@model OJewelry.Models.StyleViewModel
    
<div class="row StyleHeader">
    <div class="col-sm-8 StyleLeftHeader">
        <!-- style left header-->
        <div class="form-group">
            @Html.LabelFor(model => model.Style.StyleNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @if (Model.SVMOp == OJewelry.Models.SVMOperation.Edit)
                {
                @Html.EditorFor(model => model.Style.StyleNum, new { htmlAttributes = new { @class = "locked", @disabled="disabled" } })
                } else {
                @Html.EditorFor(model => model.Style.StyleNum, new { htmlAttributes = new { @class = "" } })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.StyleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Style.StyleName, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Style.Desc, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.JewelryTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("JewelryTypeId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.CollectionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("CollectionId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>
    </div> <!-- style left header-->
    <div class="col-sm-4 StyleRightHeader">
        <!-- style right header-->
        @{var imgurl = (Model.Style != null && Model.Style.Image != null) ? Model.Style.Image : "/Images/logo.png"; }
        <img src="@imgurl" class="StyleImage" />
    </div> <!-- style right header-->
    <div class="row MetalIntroDate">
        <div class="col-sm-8">
            @Html.LabelFor(model => model.Style.MetalWeight, "Metal Weight", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Style.MetalWeight, new { htmlAttributes = new { @class = "" } })
            </div>
            <div class="col-md-2">
                @Html.DropDownList("MetalWtUnitId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>
        <div class="col-sm-4">
            @Html.LabelFor(model => model.Style.IntroDate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Style.IntroDate, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
    </div>
    <div class="PricingMeasHead">
        <div class="col-sm-8">
            <div class="row">
                <label class="col-md-3 ">PRICING</label>
                <label class="col-md-2 text-center">MU</label>
                <label class="col-md-2 control-label"></label>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="col-sm-5"></div>
            <div class="col-sm-7">
                MEASUREMENTS
            </div>
        </div>
    </div>
    <div class="PricingMeas">
        <div class="row">
            <div class="col-sm-8">
                <div class="row">
                    <label class="col-md-3 control-label">TOTAL COST</label>
                    <label class="col-md-2 control-label text-center"></label>
                    <label class="col-md-2 control-label-align" id="GrandTotal2">@Model.Total.ToString("F02")</label>
                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Style.Length, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Style.Length, new { htmlAttributes = new { @class = "" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <div class="row">
                    @{ 
                        var retailRatio = (Model.Total == 0) ? "N/A" : (Model.Style.RetailPrice / Model.Total).Value.ToString("F03");
                    }
                    <label class="col-md-3 control-label">TARGET RETAIL</label>
                    <label class="col-md-2 control-label text-center">@retailRatio</label>
                    @Html.EditorFor(model => model.Style.RetailPrice, new { htmlAttributes = new { @class = "col-md-2" } })

                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Style.Width, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Style.Width, new { htmlAttributes = new { @class = "" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <div class="row">
                    <label class="col-md-3 control-label">REDLINE RETAIL</label>
                    <label class="col-md-2 control-label text-center">XXX.XX</label>
                    <label class="col-md-2 control-label-align">N/A</label>
                </div>
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Style.ChainLength, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Style.ChainLength, new { htmlAttributes = new { @class = "" } })
                </div>
            </div>
        </div>
    </div>
    <div>
        @Html.ValidationMessageFor(model => model.Style.StyleNum, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.StyleName, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.Desc, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.JewelryTypeId, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.CollectionId, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.MetalWeight, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.IntroDate, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.Length, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.RetailPrice, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.Width, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Style.ChainLength, "", new { @class = "text-danger" })
        <span class="text-danger">
            @foreach (KeyValuePair<string, ModelState> p in @ViewData.ModelState)
        {
            if (p.Value.Errors.Count != 0)
            {
                // display name and error
                foreach (ModelError e in p.Value.Errors)
                {
                    <span>@e.ErrorMessage</span>
            }
        }
    }
        </span>

    </div>
</div>

