@model OJewelry.Models.StyleViewModel
    
<div class="row StyleHeader ">
    <div class="col-sm-8 StyleLeftHeader">
        <!-- style left header-->
        <div class="form-group">
            @Html.LabelFor(model => model.Style.StyleNum, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-5">
                @if (Model.SVMOp == OJewelry.Models.SVMOperation.Edit)
                {
                    @Html.EditorFor(model => model.Style.StyleNum, new { htmlAttributes = new { @class = "locked", @disabled = "disabled" } })
                    @Html.HiddenFor(model => model.Style.StyleNum)
                }
                else
                {
                    @Html.EditorFor(model => model.Style.StyleNum, new { htmlAttributes = new { @class = "" } })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.StyleName, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-4">
                @Html.EditorFor(model => model.Style.StyleName, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.JewelryTypeId, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-4">
                @Html.DropDownList("JewelryTypeId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Style.CollectionId, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-4">
                @Html.DropDownList("CollectionId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>
    </div>
    <div class="col-sm-4 StyleRightHeader ">
        <!-- style right header-->
        @{var imgurl = (Model.Style != null && Model.Style.Image != null) ? Model.Style.Image : "/Images/logo.png"; }
        <img src="@imgurl" class="StyleImage centerImage" />
    </div> <!-- style right header-->
</div>
<div class="row StyleBodyBoundingBox">
    <div class="col-sm-8 floatleft">
        <div class="form-group">
            <div class="col-sm-6 bold">
                <p>MEASUREMENTS:</p>
            </div>
        </div>
        <div class="form-group bold">
            <div class="col-sm-3">L</div>
            <div class="col-sm-3">W</div>
            <div class="col-sm-3">CHAIN LENGTH</div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">                
                @Html.EditorFor(model => model.Style.Length, new { htmlAttributes = new { @class = "" } })
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Style.Width, new { htmlAttributes = new { @class = "" } })
            </div>
            <div class="col-sm-3">                
                @Html.EditorFor(model => model.Style.ChainLength, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">
                @Html.LabelFor(model => model.Style.MetalWeight, null, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Style.MetalWeight, new { htmlAttributes = new { @class = "" } })
            </div>
            <div class="col-sm-3">
                @Html.DropDownList("MetalWtUnitId", null, htmlAttributes: new { @class = "" })
            </div>
        </div>

    </div> <!--  left side bottom -->
    <div class="col-sm-4  floatright">
        <div class="row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Style.IntroDate, htmlAttributes: new { @class = "control-label col-sm-4" })
            </div>
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Style.IntroDate, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
    </div> <!--  right side bottom -->
</div>
<div>
    @Html.ValidationMessageFor(model => model.Style.StyleNum, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.StyleName, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.Desc, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.JewelryTypeId, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.CollectionId, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.MetalWeight, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.IntroDate, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.Length, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.RetailPrice, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.Width, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.Style.ChainLength, "", new { @class = "text-danger" })
    
    <span class="text-danger hidden">
        @foreach (KeyValuePair<string, ModelState> p in @ViewData.ModelState)
        {
            if (p.Value.Errors.Count != 0)
            {
                // display name and error
                foreach (ModelError e in p.Value.Errors)
                {
                    <span>@e.ErrorMessage</span>
                }
            }
        }
    </span>
</div> <!-- Validation -->


