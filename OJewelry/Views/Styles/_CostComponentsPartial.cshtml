@model OJewelry.Models.StyleViewModel
@using OJewelry.Models

<div>
    <h2>Cost</h2>
    <div class="styleCastings">
        <!-- Castings -->
        <div class="row StyleComponentsRowHeader">
            @{Model.CCLastRow = false; Model.CCHeaderRow = true; Model.CCRowIndex = -1; Model.SVMCCType = SVMCCTypeEnum.Castings;}
            @if (Model.Castings.Count == 0) { Model.CCLastRow = true; }
            @Html.Partial("_CostComponentCol1", Model)
            <div class="col-sm-2">Casting</div>
            <div class="col-sm-1"></div>
            <div class="col-sm-2">Vendor</div>
            <div class="col-sm-1">Metal</div>
            <div class="col-sm-1">Price</div>
            <div class="col-sm-1">Labor</div>
            <div class="col-sm-1">Quantity</div>
            <div class="col-sm-2">Total</div>
        </div>
        <div>
            @for (int i = 0; i < Model.Castings.Count; i++) // where state != deleted
            {
                Model.i = i;
                OJewelry.Models.CastingComponent c = Model.Castings[i];
                <div class="CastingsState">@Html.HiddenFor(model => model.Castings[i].SVMState)</div>
                <div id="CastingsRow_@i" class="CastingsRow">
                    <div class="row ltbordered">
                        @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = i;}
                        @if (i == Model.Castings.Count - 1) { Model.CCLastRow = true; }
                        @Html.HiddenFor(model => model.Castings[i].Id)
                        @Html.Partial("_CostComponentCol1", Model)
                        @Html.EditorFor(model => model.Castings[i].Name, new { htmlAttributes = new { @class = "col-sm-2" } })
                        <div class="col-sm-1"></div>
                        @Html.DropDownListFor(model => model.Castings[i].VendorId, Model.Castings[i].VendorList, new { @class = "col-sm-2" })
                        @Html.DropDownListFor(model => model.Castings[i].MetalCodeId, Model.Castings[i].MetalCodes, new { @class = "col-sm-1" })
                        @Html.EditorFor(model => model.Castings[i].Price, new { htmlAttributes = new { @class = "col-sm-1" } })
                        @Html.EditorFor(model => model.Castings[i].Labor, new { htmlAttributes = new { @class = "col-sm-1" } })
                        @Html.TextBoxFor(model => model.Castings[i].Qty, new { @class = "col-sm-1" })
                        <div id="CastingsRowTotalValue_@i" class="col-sm-2 CastingsRowTotal ">@Model.Castings[i].Total</div>
                    </div>
                    <div class="row">
                        <!--Validations Here-->
                        @Html.ValidationMessageFor(model => model.Castings[i].Name, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Castings[i].Price, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Castings[i].Labor, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.Castings[i].Qty, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            <div id="CastingsTotal">
                <div class="row h4 StyleComponentsRowFooter">
                    <div class="col-sm-2"><b>Total Castings</b></div>
                    <div class="col-sm-8"></div>
                    <div id="CastingsTotalValue" class="col-sm-2">@Model.MetalsTotal</div>
                </div>
            </div>
        </div>
    </div> <!-- Castings-->

    <div class="styleStones">
        <div class="row StyleComponentsRowHeader">
            @{Model.CCLastRow = false; Model.CCHeaderRow = true; Model.CCRowIndex = -1; Model.SVMCCType = SVMCCTypeEnum.Stones;}
            @if (Model.Stones.Count == 0) { Model.CCLastRow = true; }
            @Html.Partial("_CostComponentCol1", Model)
            <div class="col-sm-2">Stones</div>
            <div class="col-sm-1"></div>
            <div class="col-sm-2">Vendor</div>
            <div class="col-sm-1">Ct Wt</div>
            <div class="col-sm-1">Size</div>
            <div class="col-sm-1">PPC/$</div>
            <div class="col-sm-1">Qty</div>
            <div class="col-sm-2">Total</div>
        </div>
        @for (int i = 0; i < Model.Stones.Count; i++)
        {
            Model.i = i;
            OJewelry.Models.StoneComponent c = Model.Stones[i];
            <div class="StonesState">@Html.HiddenFor(model => model.Stones[i].SVMState)</div>
            <div id="StonesRow_@i" class="StonesRow">
                <div class="row ltbordered">
                    @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = i;}
                    @if (i == Model.Stones.Count - 1) { Model.CCLastRow = true; }
                    @Html.HiddenFor(model => model.Stones[i].Id)
                    @Html.HiddenFor(model => model.Stones[i].Name) <!-- should be dropdown -->
                    @Html.HiddenFor(model => model.Stones[i].ComponentTypeId)
                    @Html.Partial("_CostComponentCol1", Model)
                    @*<div class="col-sm-2 ">@c.Name </div>*@
                    @Html.DropDownListFor(model => model.Stones[i].Comp.Id, Model.Stones[i].ac, new { @class = "col-sm-2" })
                    <div class="col-sm-1 "></div>
                    <div class="col-sm-2 ">@c.VendorName </div>
                    <div class="col-sm-1 ">@c.CtWt </div>
                    <div class="col-sm-1 ">@c.Size </div>
                    <div class="col-sm-1 ">@c.PPC </div>
                    @Html.EditorFor(model => model.Stones[i].Qty, new { htmlAttributes = new { @class = "col-sm-1" } })
                    <div id="StonesRowTotalValue_@i" class="col-sm-2 StonesRowTotal ">@Model.Stones[i].Total</div>
                </div>

                <div class="row">
                    @Html.ValidationMessageFor(model => model.Stones[i].Name, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Stones[i].Qty, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div id="StonesTotal">
            <div class="row h4 StyleComponentsRowFooter">
                <div class="col-sm-2"><b>Total Stones</b></div>
                <div class="col-sm-8"></div>
                <div id="StonesTotalValue" class="col-sm-2">@Model.StonesTotal</div>
            </div>
        </div>
    </div> <!--Stones-->

    <div class="styleFindings">
        <!-- Findings -->
        <div class="row StyleComponentsRowHeader">
            @{Model.CCLastRow = false; Model.CCHeaderRow = true; Model.CCRowIndex = -1; Model.SVMCCType = SVMCCTypeEnum.Findings; }
            @if (Model.Findings.Count == 0) { Model.CCLastRow = true; }
            @Html.Partial("_CostComponentCol1", Model)
            <div class="col-sm-2">Findings</div>
            <div class="col-sm-2"></div>
            <div class="col-sm-2">Vendor</div>
            <div class="col-sm-1">Metal</div>
            <div class="col-sm-1">Price</div>
            <div class="col-sm-1">Qty</div>
            <div class="col-sm-2">Total</div>
        </div>
        @for (int i = 0; i < Model.Findings.Count; i++)
        {
            Model.i = i;
            OJewelry.Models.FindingsComponent c = Model.Findings[i];
            <div class="FindingsState">@Html.HiddenFor(model => model.Findings[i].SVMState)</div>
            <div id="FindingsRow_@i" class="FindingsRow">
                <div class="row ltbordered">
                    @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = i;}
                    @if (i == Model.Findings.Count - 1) { Model.CCLastRow = true; }
                    @Html.HiddenFor(model => model.Findings[i].Id)
                    @Html.HiddenFor(model => model.Findings[i].Name)
                    @Html.HiddenFor(model => model.Findings[i].ComponentTypeId)
                    @Html.Partial("_CostComponentCol1", Model)
                    @*<div class="col-sm-2 ">@c.Name </div>*@
                    @Html.DropDownListFor(model => model.Findings[i].Comp.Id, Model.Findings[i].ac, new { @class = "col-sm-2" })
                    <div class="col-sm-2 "></div>
                    <div class="col-sm-2 ">@c.VendorName </div>
                    <div class="col-sm-1">@Model.Findings[i].Metal</div>
                    <div class="col-sm-1">@Model.Findings[i].Price</div>
                    @Html.EditorFor(model => model.Findings[i].Qty, new { htmlAttributes = new { @class = "col-sm-1" } })
                    <div id="FindingsRowTotalValue_@i" class="col-sm-2 FindingsRowTotal ">@Model.Findings[i].Total</div>
                </div>
                <div class="row">
                    @Html.ValidationMessageFor(model => model.Findings[i].Name, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Findings[i].Price, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Findings[i].Qty, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div id="FindingsTotal">
            <div class="row h4 StyleComponentsRowFooter">
                <div id="FindingsTotalValue" class="col-sm-2"><b>Total Findings</b></div>
                <div class="col-sm-8"></div>
                <div class="col-sm-2">@Model.FindingsTotal</div>
            </div>
        </div>
    </div> <!-- Findings -->

    <div class="styleLabors">
        <!-- Labor -->
        <div class="row StyleComponentsRowHeader">
            @{Model.CCLastRow = false; Model.CCHeaderRow = true; Model.CCRowIndex = -1; Model.SVMCCType = SVMCCTypeEnum.Labors; }
            @if (Model.Labors.Count == 0) { Model.CCLastRow = true; }
            @Html.Partial("_CostComponentCol1")
            <div class="col-sm-2">Labor</div>
            <div class="col-sm-2 ">Desc</div>
            <div class="col-sm-2"></div>
            <div class="col-sm-1">Price/PPH</div>
            <div class="col-sm-1">Price/PPC</div>
            <div class="col-sm-1">Qty</div>
            <div class="col-sm-2">Total</div>
        </div>
        @for (int i = 0; i < Model.Labors.Count; i++)
        {
            Model.i = i;
            OJewelry.Models.LaborComponent c = Model.Labors[i];
            <div class="LaborsState">@Html.HiddenFor(model => model.Labors[i].SVMState)</div>
            <div id="LaborsRow_@i" class="LaborsRow">
                <div class="row ltbordered">
                    @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = i;}
                    @if (i == Model.Labors.Count - 1) { Model.CCLastRow = true; }
                    @Html.HiddenFor(model => model.Labors[i].Id)
                    @Html.Partial("_CostComponentCol1", Model)
                    @Html.EditorFor(model => model.Labors[i].Name, new { htmlAttributes = new { @class = "col-sm-2" } })
                    @Html.EditorFor(model => model.Labors[i].Desc, new { htmlAttributes = new { @class = "col-sm-2" } })
                    <div class="col-sm-2 "></div>
                    @Html.EditorFor(model => model.Labors[i].PPH, new { htmlAttributes = new { @class = "col-sm-1" } })
                    @Html.EditorFor(model => model.Labors[i].PPP, new { htmlAttributes = new { @class = "col-sm-1" } })
                    @Html.EditorFor(model => model.Labors[i].Qty, new { htmlAttributes = new { @class = "col-sm-1" } })
                    <div id="LaborsRowTotalValue_@i" class="col-sm-2 LaborsRowTotal">@Model.Labors[i].Total</div>
                </div>
                <div class="row">
                    @Html.ValidationMessageFor(model => model.Labors[i].Name, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Labors[i].PPH, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Labors[i].PPP, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Labors[i].Qty, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div id="LaborsTotal">
            <div class="row h4 StyleComponentsRowFooter">
                <div class="col-sm-2"><b>Total Labor</b></div>
                <div class="col-sm-8"></div>
                <div id="LaborsRowTotal" class="col-sm-2">@Model.LaborsTotal</div>
            </div>
        </div>
    </div> <!-- Labors -->

    <div class="styleMiscs">
        <!-- Misc -->
        <div class="row StyleComponentsRowHeader">
            @{Model.CCLastRow = false; Model.CCHeaderRow = true; Model.CCRowIndex = -1; Model.SVMCCType = SVMCCTypeEnum.Miscs; }
            @if (Model.Miscs.Count == 0) { Model.CCLastRow = true; }
            @Html.Partial("_CostComponentCol1")
            <div class="col-sm-2">Misc</div>
            <div class="col-sm-2">Desc</div>
            <div class="col-sm-3"></div>
            <div class="col-sm-1">Price</div>
            <div class="col-sm-1">Qty</div>
            <div class="col-sm-2">Total</div>
        </div>
        @for (int i = 0; i < Model.Miscs.Count; i++)
        {
            Model.i = i;
            OJewelry.Models.MiscComponent c = Model.Miscs[i];
            <div class="MiscsState">@Html.HiddenFor(model => model.Miscs[i].SVMState)</div>
            <div id="MiscsRow_@i" class="MiscsRow">
                <div class="row ltbordered">
                    @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = i;}
                    @if (i == Model.Miscs.Count - 1) { Model.CCLastRow = true; Model.CCRowIndex = i; }
                    @Html.HiddenFor(model => model.Miscs[i].Id)
                    @Html.Partial("_CostComponentCol1", Model)
                    @Html.EditorFor(model => model.Miscs[i].Name, new { htmlAttributes = new { @class = "col-sm-2" } })
                    @Html.EditorFor(model => model.Miscs[i].Desc, new { htmlAttributes = new { @class = "col-sm-2" } })
                    <div class="col-sm-3 "></div>
                    @Html.EditorFor(model => model.Miscs[i].PPP, new { htmlAttributes = new { @class = "col-sm-1" } })
                    @Html.EditorFor(model => model.Miscs[i].Qty, new { htmlAttributes = new { @class = "col-sm-1" } })
                    <div id="MiscsRowTotalValue_@i" class="col-sm-2 MiscsRowTotal">@Model.Miscs[i].Total</div>
                </div>
                <div class="row">
                    @Html.ValidationMessageFor(model => model.Miscs[i].Name, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Miscs[i].PPP, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Miscs[i].Qty, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div id="MiscsTotal">
            <div class="row h4 StyleComponentsRowFooter">
                <div class="col-sm-2"><b>Total Misc</b></div>
                <div class="col-sm-8"></div>
                <div id="MiscsTotalValue" class="col-sm-2">@Model.MiscsTotal</div>
            </div>
        </div>
    </div> <!-- Misc -->

    <div class="row h3 StyleComponentsFooter">
        <div class="col-sm-2"><b>Total Cost</b></div>
        <div class="col-sm-8"></div>
        <div id="GrandTotal" class="col-sm-2">@Model.Total</div>
    </div>
    <div class="hidden">
        <!-- @*
        <div id="CastingsRow_INDEX">
            <div class="row ltbordered">
                @{Model.CCLastRow = false; Model.CCHeaderRow = false; Model.CCRowIndex = INDEX;}
                @if (i == Model.Castings.Count - 1) { Model.CCLastRow = true; }
                @Html.HiddenFor(model => model.Castings[i].Id)
                @Html.Partial("_CostComponentCol1", Model)
                @Html.EditorFor(model => model.Castings[i].Name, new { htmlAttributes = new { @class = "col-sm-2" } })
                <div class="col-sm-1"></div>
                @Html.DropDownListFor(model => model.Castings[i].VendorId, Model.Castings[i].VendorList, new { @class = "col-sm-2" })
                @Html.DropDownListFor(model => model.Castings[i].MetalCodeId, Model.Castings[i].MetalCodes, new { @class = "col-sm-1" })
                @Html.EditorFor(model => model.Castings[i].Price, new { htmlAttributes = new { @class = "col-sm-1" } })
                @Html.EditorFor(model => model.Castings[i].Labor, new { htmlAttributes = new { @class = "col-sm-1" } })
                @Html.TextBoxFor(model => model.Castings[i].Qty, new { @class = "col-sm-1" })
                <div id="CastingsRowTotalValue_@i" class="col-sm-2 CastingsRowTotal ">@Model.Castings[i].Total</div>
            </div>
            <div class="row">
                <!--Validations Here-->
                @Html.ValidationMessageFor(model => model.Castings[i].Name, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Castings[i].Price, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Castings[i].Labor, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Castings[i].Qty, "", new { @class = "text-danger" })
            </div>

        </div>
        *@-->

    </div>
</div>
